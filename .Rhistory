library(mysterycoffee)
hello()
hello("Barbara")
hello
hello <- function(name) {
print(paste("Hello,", name))
}
hello
library(mysterycoffee)
hello("Barbara")
mysterycoffee::hello("Barbara")
hello("Dani")
library(mysterycoffee)
mysterycoffee::hello("Barbara")
hello("Dani")
detach("package:mysterycoffee", unload = TRUE)
remove.packages("mysterycoffee")
mysterycoffee::hello("txt")
starwarsdb::people
library(mysterycoffee)
hello()
hello()
hello()
detach("package:starwarsdb", unload = TRUE)
hello()
?filter
detach("package:starwarsdb", unload = TRUE)
library(mysterycoffee)
hello()
hello()
hello()
hello()
hello()
hello()
hello()
usethis::use_data_raw()
usethis::use_apache_license()
CRAN_package_db()
tools::CRAN_package_db()
tools::CRAN_package_db() |>
dplyr::group_by(License) |>
dplyr::summarise(count = dplyr::n()) |>
dplyr::arrange(desc(count.fields()))
dplyr::arrange(desc(count))
tools::CRAN_package_db() |>
dplyr::group_by(License) |>
dplyr::summarise(count = dplyr::n()) |>
dplyr::arrange(desc(count))
packageDescription(mysterycoffee)
library(mysterycoffee)
library(mysterycoffee)
usethis::use_agpl3_license()
library(mysterycoffee)
usethis::use_mit_license()
library(mysterycoffee)
usethis::use_apache_license()
library(mysterycoffee)
names <- c("Eva", "Dani", "Kirsten", "Tessa", "Selin", "Fenne")
make_groups(names)
classmates <- c("Eva", "Dani", "Kirsten", "Tessa", "Selin", "Fenne")
make_groups(names = classmates)
usethis::use_data(classmates)
cars
starwarsdb::people
library(mysterycoffee)
make_groups(names = classmates)
starwars_names <- sample(starwarsdb::people$name, 10)
usethis::use_data(starwars_names)
remove(starwars_names)
library(mysterycoffee)
mysterycoffee::starwars_names
mysterycoffee::classmates
library(mysterycoffee)
employees <- read.csv("inst/extdata/employees.csv")
View(employees)
file.path("extdata", "employees.csv", package = "mysterycoffee")
system.file("extdata", "employees.csv", package = "mysterycoffee")
filepath_2 <- system.file("extdata", "employees.csv", package = "mysterycoffee")
filepath_2
filepath_1 <- "inst/extdata/employees.csv"
filepath_1
filepath_2
system.file("extdata", "employer.csv", package = "mysterycoffee")
employees <- read.csv(filepath_2)
employees_packaged <- read.csv(filepath_2)
View(employees_packaged)
""
library(mysterycoffee)
library(mysterycoffee)
library(mysterycoffee)
15*36
15*36 - 4*8
?ggplot::autoplot
?ggplot2::autoplot
system.file("employees.csv", "extdata", package="mysterycoffe")
system.file("employees.csv", "extdata", package="mysterycoffee")
library(mysterycoffee)
system.file("employees.csv", "extdata", package="mysterycoffee")
system.file("extdata", "employees.csv" package="mysterycoffee")
system.file("extdata", "employees.csv", package="mysterycoffee")
mysterycoffee::classmates
library(mysterycoffee)
usethis::use_package("magrittr")
classmates
make_groups(classmates)
make_groups(1)
make_groups(NA)
usethis::use_testthat()
usethis::use_test("make_groups")
library(mysterycoffee)
library(mysterycoffee)
?data
testthat::expect_equal(3,4)
testthat::expect_equal(3,3)
if(3 != 4, stop("Error!"))
if(3 != 4){
stop("Error!")
}
data("starwars_names")
library(mysterycoffee)
make_groups(1)
starwars <- data("starwars_names")
library(mysterycoffee)
make_groups(1)
make_groups(1)
library(mysterycoffee)
library(mysterycoffee)
pick_classmates()
pick_classmates()
pick_classmates()
starwars_names
class
classmates
testthat::test_check("mysterycoffee")
library(testthat)
library(mysterycoffee)
test_check("mysterycoffee")
mysterycoffee::classmates
View(CheckReporter)
myVector <- c("1", "2", "3", "4")
save(myVector, file="tests/myVector.rda")
save(myVector, file="tests/testthat/myVector.rda")
library(mysterycoffee)
library(mysterycoffee)
covr::report()
library(mysterycoffee)
covr::report()
library(mysterycoffee)
covr::report()
library(mysterycoffee)
covr::report()
typeof("text")
length("text")
covr::report()
usethis::use_package("testthat", type="Suggests")
?usethis::use_package
usethis::use_package("testthat",
suggests)
usethis::use_package("testthat",
"suggests")
usethis::use_package("testthat")
usethis::use_package("testthat", "Suggests")
usethis::use_package("testthat", "Suggests")
usethis::use_package("testthat", "Suggests")
usethis::use_package("starwarsdb, "Imports"")
usethis::use_package("starwarsdb, "Imports")
usethis::use_package("starwarsdb", "Imports")
usethis::use_package("starwarsdb", "Imports", min_version = TRUE)
usethis::use_r("make_groups_by_time")
possible_times <- c("09:30",
"10:00",
"14:00",
"16:30")
sample(possible_times, 40)
sample(possible_times, 40, replace=F)
sample(possible_times, 40, replace=T)
usethis::use_test("make_groups_by_time")
groups <- make_groups_by_time(myVector)
library(mysterycoffee)
groups <- make_groups_by_time(myVector)
library(mysterycoffee)
library(mysterycoffee)
friends <- pick_starwarsfriends()
groups <- make_groups_by_time(friends)
type(groups)
groups
class(groups)
usethis::use_package("dplyr", min_version=T)
friends <- pick_starwarsfriends()
groups <- make_groups_by_time(friends)
class(groups)
groups
friends <- pick_starwarsfriends()
groups <- make_groups_by_time(friends)
friends <- pick_starwarsfriends()
groups <- make_groups_by_time(friends)
View(groups)
install.packages("worcs")
library(mysterycoffee)
?make_groups
usethis::use_r("data")
mysterycoffee::starwars_names
library(mysterycoffee)
?starwars_names
library(mysterycoffee)
?starwars_names
?data
roxygen2::roxygenise()
?starwars_names
library(mysterycoffee)
library(mysterycoffee)
usethis::use_readme_md()
library(mysterycoffee)
roxygen2::roxygenise()
library(mysterycoffee)
roxygen2::roxygenise()
mysterycoffee::pick_classmate
mysterycoffee::pick_classmate()
library(mysterycoffee)
?pick_classmate()
devtools::document()
devtools::document()
library(mysterycoffee)
devtools::document()
library(mysterycoffee)
browseVignettes(package = "dplyr")
vignette("in-packages", package="dplyr")
vignette("in-packages", package="tidyr")
browseVignettes(package = "tidyr")
usethis::use_vignette("example")
devtools::build_rmd("vignettes/example.Rmd")
library(mysterycoffee)
devtools::build_rmd("vignettes/example.Rmd")
library(mysterycoffee)
browseVignettes("mysterycoffee")
devtools::install(build_vignettes = TRUE)
browseVignettes("mysterycoffee")
devtools::install(build_vignettes = TRUE)
devtools::build_rmd("vignettes/example.Rmd")
devtools::install(build_vignettes = TRUE)
library(mysterycoffee)
devtools::install(build_vignettes = TRUE)
browseVignettes("mysterycoffee")
